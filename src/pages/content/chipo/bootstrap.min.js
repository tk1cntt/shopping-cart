if ('undefined' == typeof jQuery)
  throw new Error("Bootstrap's JavaScript requires jQuery");
+(function(t) {
  'use strict';
  var i = t.fn.jquery.split(' ')[0].split('.');
  if (
    (i[0] < 2 && i[1] < 9) ||
    (1 == i[0] && 9 == i[1] && i[2] < 1) ||
    i[0] > 3
  )
    throw new Error(
      "Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4"
    );
})(jQuery),
  +(function(t) {
    'use strict';
    function i(i, e) {
      return this.each(function() {
        var s = t(this),
          n = s.data('bs.chipoModal'),
          r = t.extend({}, o.DEFAULTS, s.data(), 'object' == typeof i && i);
        n || s.data('bs.chipoModal', (n = new o(this, r))),
          'string' == typeof i ? n[i](e) : r.show && n.show(e);
      });
    }
    var o = function(i, o) {
      (this.options = o),
        (this.$body = t(document.body)),
        (this.$element = t(i)),
        (this.$dialog = this.$element.find('.chipoModal-dialog')),
        (this.$backdrop = null),
        (this.isShown = null),
        (this.originalBodyPad = null),
        (this.scrollbarWidth = 0),
        (this.ignoreBackdropClick = !1),
        this.options.remote &&
          this.$element.find('.chipoModal-content').load(
            this.options.remote,
            t.proxy(function() {
              this.$element.trigger('loaded.bs.chipoModal');
            }, this)
          );
    };
    (o.VERSION = '3.3.7'),
      (o.TRANSITION_DURATION = 300),
      (o.BACKDROP_TRANSITION_DURATION = 150),
      (o.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }),
      (o.prototype.toggle = function(t) {
        return this.isShown ? this.hide() : this.show(t);
      }),
      (o.prototype.show = function(i) {
        var e = this,
          s = t.Event('show.bs.chipoModal', { relatedTarget: i });
        this.$element.trigger(s),
          this.isShown ||
            s.isDefaultPrevented() ||
            ((this.isShown = !0),
            this.checkScrollbar(),
            this.setScrollbar(),
            this.$body.addClass('chipoModal-open'),
            this.escape(),
            this.resize(),
            this.$element.on(
              'click.dismiss.bs.chipoModal',
              '[data-dismiss="chipoModal"]',
              t.proxy(this.hide, this)
            ),
            this.$dialog.on('mousedown.dismiss.bs.chipoModal', function() {
              e.$element.one('mouseup.dismiss.bs.chipoModal', function(i) {
                t(i.target).is(e.$element) && (e.ignoreBackdropClick = !0);
              });
            }),
            this.backdrop(function() {
              var s = t.support.transition && e.$element.hasClass('fade');
              e.$element.parent().length || e.$element.appendTo(e.$body),
                e.$element.show().scrollTop(0),
                e.adjustDialog(),
                s && e.$element[0].offsetWidth,
                e.$element.addClass('in'),
                e.enforceFocus();
              var n = t.Event('shown.bs.chipoModal', { relatedTarget: i });
              s
                ? e.$dialog
                    .one('bsTransitionEnd', function() {
                      e.$element.trigger('focus').trigger(n);
                    })
                    .emulateTransitionEnd(o.TRANSITION_DURATION)
                : e.$element.trigger('focus').trigger(n);
            }));
      }),
      (o.prototype.hide = function(i) {
        i && i.preventDefault(),
          (i = t.Event('hide.bs.chipoModal')),
          this.$element.trigger(i),
          this.isShown &&
            !i.isDefaultPrevented() &&
            ((this.isShown = !1),
            this.escape(),
            this.resize(),
            t(document).off('focusin.bs.chipoModal'),
            this.$element
              .removeClass('in')
              .off('click.dismiss.bs.chipoModal')
              .off('mouseup.dismiss.bs.chipoModal'),
            this.$dialog.off('mousedown.dismiss.bs.chipoModal'),
            t.support.transition && this.$element.hasClass('fade')
              ? this.$element
                  .one('bsTransitionEnd', t.proxy(this.hideChipoModal, this))
                  .emulateTransitionEnd(o.TRANSITION_DURATION)
              : this.hideChipoModal());
      }),
      (o.prototype.enforceFocus = function() {
        t(document)
          .off('focusin.bs.chipoModal')
          .on(
            'focusin.bs.chipoModal',
            t.proxy(function(t) {
              document === t.target ||
                this.$element[0] === t.target ||
                this.$element.has(t.target).length ||
                this.$element.trigger('focus');
            }, this)
          );
      }),
      (o.prototype.escape = function() {
        this.isShown && this.options.keyboard
          ? this.$element.on(
              'keydown.dismiss.bs.chipoModal',
              t.proxy(function(t) {
                27 == t.which && this.hide();
              }, this)
            )
          : this.isShown || this.$element.off('keydown.dismiss.bs.chipoModal');
      }),
      (o.prototype.resize = function() {
        this.isShown
          ? t(window).on(
              'resize.bs.chipoModal',
              t.proxy(this.handleUpdate, this)
            )
          : t(window).off('resize.bs.chipoModal');
      }),
      (o.prototype.hideChipoModal = function() {
        var t = this;
        this.$element.hide(),
          this.backdrop(function() {
            t.$body.removeClass('chipoModal-open'),
              t.resetAdjustments(),
              t.resetScrollbar(),
              t.$element.trigger('hidden.bs.chipoModal');
          });
      }),
      (o.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove(), (this.$backdrop = null);
      }),
      (o.prototype.backdrop = function(i) {
        var e = this,
          s = this.$element.hasClass('fade') ? 'fade' : '';
        if (this.isShown && this.options.backdrop) {
          var n = t.support.transition && s;
          if (
            ((this.$backdrop = t(document.createElement('div'))
              .addClass('chipoModal-backdrop ' + s)
              .appendTo(this.$body)),
            this.$element.on(
              'click.dismiss.bs.chipoModal',
              t.proxy(function(t) {
                return this.ignoreBackdropClick
                  ? void (this.ignoreBackdropClick = !1)
                  : void (
                      t.target === t.currentTarget &&
                      ('static' == this.options.backdrop
                        ? this.$element[0].focus()
                        : this.hide())
                    );
              }, this)
            ),
            n && this.$backdrop[0].offsetWidth,
            this.$backdrop.addClass('in'),
            !i)
          )
            return;
          n
            ? this.$backdrop
                .one('bsTransitionEnd', i)
                .emulateTransitionEnd(o.BACKDROP_TRANSITION_DURATION)
            : i();
        } else if (!this.isShown && this.$backdrop) {
          this.$backdrop.removeClass('in');
          var r = function() {
            e.removeBackdrop(), i && i();
          };
          t.support.transition && this.$element.hasClass('fade')
            ? this.$backdrop
                .one('bsTransitionEnd', r)
                .emulateTransitionEnd(o.BACKDROP_TRANSITION_DURATION)
            : r();
        } else i && i();
      }),
      (o.prototype.handleUpdate = function() {
        this.adjustDialog();
      }),
      (o.prototype.adjustDialog = function() {
        var t =
          this.$element[0].scrollHeight > document.documentElement.clientHeight;
        this.$element.css({
          paddingLeft: !this.bodyIsOverflowing && t ? this.scrollbarWidth : '',
          paddingRight: this.bodyIsOverflowing && !t ? this.scrollbarWidth : ''
        });
      }),
      (o.prototype.resetAdjustments = function() {
        this.$element.css({ paddingLeft: '', paddingRight: '' });
      }),
      (o.prototype.checkScrollbar = function() {
        var t = window.innerWidth;
        if (!t) {
          var i = document.documentElement.getBoundingClientRect();
          t = i.right - Math.abs(i.left);
        }
        (this.bodyIsOverflowing = document.body.clientWidth < t),
          (this.scrollbarWidth = this.measureScrollbar());
      }),
      (o.prototype.setScrollbar = function() {
        var t = parseInt(this.$body.css('padding-right') || 0, 10);
        (this.originalBodyPad = document.body.style.paddingRight || ''),
          this.bodyIsOverflowing &&
            this.$body.css('padding-right', t + this.scrollbarWidth);
      }),
      (o.prototype.resetScrollbar = function() {
        this.$body.css('padding-right', this.originalBodyPad);
      }),
      (o.prototype.measureScrollbar = function() {
        var t = document.createElement('div');
        (t.className = 'chipoModal-scrollbar-measure'), this.$body.append(t);
        var i = t.offsetWidth - t.clientWidth;
        return this.$body[0].removeChild(t), i;
      });
    var e = t.fn.chipoModal;
    (t.fn.chipoModal = i),
      (t.fn.chipoModal.Constructor = o),
      (t.fn.chipoModal.noConflict = function() {
        return (t.fn.chipoModal = e), this;
      }),
      t(document).on(
        'click.bs.chipoModal.data-api',
        '[data-toggle="chipoModal"]',
        function(o) {
          var e = t(this),
            s = e.attr('href'),
            n = t(
              e.attr('data-target') || (s && s.replace(/.*(?=#[^\s]+$)/, ''))
            ),
            r = n.data('bs.chipoModal')
              ? 'toggle'
              : t.extend({ remote: !/#/.test(s) && s }, n.data(), e.data());
          e.is('a') && o.preventDefault(),
            n.one('show.bs.chipoModal', function(t) {
              t.isDefaultPrevented() ||
                n.one('hidden.bs.chipoModal', function() {
                  e.is(':visible') && e.trigger('focus');
                });
            }),
            i.call(n, r, this);
        }
      );
  })(jQuery),
  +(function(t) {
    'use strict';
    function i() {
      var t = document.createElement('bootstrap'),
        i = {
          WebkitTransition: 'webkitTransitionEnd',
          MozTransition: 'transitionend',
          OTransition: 'oTransitionEnd otransitionend',
          transition: 'transitionend'
        };
      for (var o in i) if (void 0 !== t.style[o]) return { end: i[o] };
      return !1;
    }
    (t.fn.emulateTransitionEnd = function(i) {
      var o = !1,
        e = this;
      t(this).one('bsTransitionEnd', function() {
        o = !0;
      });
      var s = function() {
        o || t(e).trigger(t.support.transition.end);
      };
      return setTimeout(s, i), this;
    }),
      t(function() {
        (t.support.transition = i()),
          t.support.transition &&
            (t.event.special.bsTransitionEnd = {
              bindType: t.support.transition.end,
              delegateType: t.support.transition.end,
              handle: function(i) {
                return t(i.target).is(this)
                  ? i.handleObj.handler.apply(this, arguments)
                  : void 0;
              }
            });
      });
  })(jQuery);
